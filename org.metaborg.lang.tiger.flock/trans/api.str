module api

signature
  constructors
    FlockNodeId : Int -> FlockNodeId

strategies

  flock-add-id = topdown(flock-add-id-single)
  flock-add-id-single: t -> t { FlockNodeId(<flock-make-id>) }
  flock-debug: t -> t where <debug> t

strategies

  external flock-disable-incremental(|)
  external flock-enable-incremental(|)

  external flock-begin-timer(|)
  external flock-end-timer(|)
  flock-time-as(s|key) = where(<flock-begin-timer> key); restore-always(s, where(<flock-end-timer> key))

  external flock-debug-graph(|)
  external flock-debug-graph(|prop-name)

  flock-initialize = flock-add-id; where(flock-initialize-impl)
  external flock-initialize-impl(|)

  external flock-remove-node(|)
  external flock-make-id(|)
  flock-print: t -> <debug; flock-print-impl> t
  external flock-print-impl(|)
  
  flock-replace-node(|old): new -> <flock-add-id; flock-replace-node-impl(|old)> new
  external flock-replace-node-impl(|n)

  flock-remove-all(s): [] -> []
  flock-remove-all(s): l@[h|t] -> <remove-all(s; flock-remove-node)> l 

  flock-fixpoint(s|0) = id
  flock-fixpoint(s|bound): p -> <s < (flock-fixpoint(s | <dec> bound)) + id> p
  where <not(equal(|0))> bound

strategies
      
  flock-is-live(|name): node {FlockNodeId(n)} -> <flock-is-live> (name, n)
  flock-is-live: (name, loc) -> <get-live; !(name, <id>); strip-annos; elem> loc
  external get-live(|)
  
  flock-get-values: node {FlockNodeId(n)} -> <get-values> n
  external get-values(|)
  flock-get-value(|key):  node {FlockNodeId(n)} -> <get-value(|key)> n
  external get-value(|key)

  flock-get-ae: node {FlockNodeId(n)} -> <get-expressions; strip-annos> n
  external get-expressions(|)
