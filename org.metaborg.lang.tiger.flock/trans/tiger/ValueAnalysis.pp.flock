module tiger/ValueAnalysis

  imports
      tiger/Cfg
  properties
      values: Value
  property rules
      values(_.end) = Value.top
      values(prev -> _) = values(prev)
  types
      ConstProp with dependencies =
          | Top( )
          | Const(int)
          | Bottom( )
  lattices
      Value is value with dependencies where
          type = ConstProp
          bottom = Bottom( ): ConstProp as Value
          top = Top( ): ConstProp as Value
          lub(l: ConstProp, r: ConstProp) = match (l, r) with
                                              | (Top( ), _) => Top( ): ConstProp{l,r} as Value
                                              | (_, Top( )) => Top( ): ConstProp{l,r} as Value
                                              | (Const(i), Const(j)) => if i == j then Const(i): ConstProp{l,r} as Value else Top( ): ConstProp{l,r} as Value
                                              | (_, Bottom( )) => l: ConstProp{l,r} as Value
                                              | (Bottom( ), _) => r: ConstProp{l,r} as Value