module dynamics/S02/uniquify

imports dynamics/S01/uniquify

imports signatures/Variables-sig 
imports signatures/Bindings-sig 
imports signatures/tiger-sig
imports statix/api

rules

//  rename :: string -> string 
  declare-new-name :
    x1 -> x2
    with debug(!"declare-new-name: ")
    with <newname> x1 => x2
    with rules( Rename : x1 -> x2 )
    
  rename :
    x1 -> x2
    with debug(!"rename: ")
    with <stx-get-ast-analysis> x1 => analysis
    with <stx-get-ast-ref(|analysis)> x1 => d
    with <Rename>d => x2
          
rules 

//  uniquify-mod :: Module -> Module
//  uniquify-exp :: Exp -> Exp
//  uniquify-dec :: Dec -> Dec
//  uniquify-gen :: TP 

  uniquify = uniquify-mod
  
  uniquify-mod : 
    Mod(e) -> Mod(<uniquify-gen>e)
    
  uniquify-gen = 
    topdown(try(uniquify-dec));
    topdown(try(uniquify-ref))
  
  uniquify-dec :
    VarDec(x1, t, e) -> VarDec(x2, t, e)
    with <declare-new-name> x1 => x2
    
  uniquify-dec : // TODO: consider desugaring VarDecNoType
    VarDecNoType(x1, e) -> VarDecNoType(x2, e)
    with <declare-new-name> x1 => x2
            
  uniquify-ref :
    Var(x1) -> Var(x2)
    with <rename> x1 => x2
                
    
    