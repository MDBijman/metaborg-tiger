module Types

imports Occurrences
imports Base

sorts TypeDec

context-free syntax // type declarations
   
  Dec.TypeDecs = <<{TypeDec "\n"}+>> {longest-match}
  
  TypeDec.TypeDec = <type <Occ> = <Type>> 
  
context-free syntax // type expressions

  Type.Tid = TypeId 
  TypeId  = Occ 
  
//sorts TYPE Scope
//context-free syntax // semantic types
//
//  TYPE.INT      = <INT> 
//  TYPE.STRING   = <STRING> 
//  TYPE.NIL      = <NIL> 
//  TYPE.UNIT     = <UNIT> 
//  TYPE.NAME     = <NAME <Occ>> 
//  TYPE.RECORD   = <RECORD <Scope>>
//  TYPE.ARRAY    = <ARRAY <TYPE> <Scope>> 
//  TYPE.FUN      = <FUN ( <{TYPE ","}*> ) <TYPE>>
