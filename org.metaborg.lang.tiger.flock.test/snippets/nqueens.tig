/* A program to solve the 8-queens problem */

let
    function printboard(N:int, col: intArray) =
        (for i := 0 to N - 1
    do (for j := 0 to N - 1 
        do print(if col[i] = j then " O" else " .");
        print("\n"));
          print("\n"))

    function try(N:int, row: intArray, col: intArray, diag1: intArray, diag2: intArray, c: int) = 
      if c = N then
        printboard(N, col)
      else 
        for r := 0 to N - 1 do 
          if row[r] = 0 & diag1[r + c] = 0 & diag2[r + 7 - c] = 0 then 
              (row[r] := 1
            ;  diag1[r + c] := 1
            ;  diag2[r + 7 - c] := 1
            ;  col[c] := r
            ;  try(N, row, col, diag1, diag2, c + 1)
            ;  row[r] := 0
            ;  diag1[r + c] := 0
            ;  diag2[r + 7 - c] := 0)
            
    type intArray = array of int

    var row := intArray [ 8 ] of 0
    var col := intArray [ 8 ] of 0
    var diag1 := intArray [16-1] of 0
    var diag2 := intArray [16-1] of 0
  in try(8, row, col, diag1, diag2, 0)
end